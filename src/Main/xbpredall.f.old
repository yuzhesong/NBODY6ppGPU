      subroutine xbpredall
*
*
*     Predict x and xdot. (L.WANG)

      INCLUDE 'common6.h'
      INCLUDE 'omp_lib.h'
      COMMON/XPRED/ TPRED(NMAX),TRES(KMAX),ipredall
      REAL*8 TPRED
      LOGICAL iPREDALL

      IF (IPREDALL) RETURN
*
      NNPRED = NNPRED + 1
!$omp parallel do private(J,S,S1,S2,JPAIR,J1,J2,ZZ)
      DO 40 J = IFIRST,NTOT
*     IF(TPRED(J).NE.TIME) THEN
         S = TIME - T0(J)
         S1 = 1.5*S
         S2 = 2.0*S
         X(1,J) = ((FDOT(1,J)*S + F(1,J))*S +X0DOT(1,J))*S +X0(1,J)
         X(2,J) = ((FDOT(2,J)*S + F(2,J))*S +X0DOT(2,J))*S +X0(2,J)
         X(3,J) = ((FDOT(3,J)*S + F(3,J))*S +X0DOT(3,J))*S +X0(3,J)
         XDOT(1,J) = (FDOT(1,J)*S1 + F(1,J))*S2 + X0DOT(1,J)
         XDOT(2,J) = (FDOT(2,J)*S1 + F(2,J))*S2 + X0DOT(2,J)
         XDOT(3,J) = (FDOT(3,J)*S1 + F(3,J))*S2 + X0DOT(3,J)
         TPRED(J) = TIME
         TTIME = TIME
         IF (J.GT.N) THEN
            JPAIR = J - N
            IF (LIST(1,2*JPAIR - 1).GT.0) THEN
               ZZ = 1.0
               IF (GAMMA(JPAIR).GT.1.0D-04) ZZ = 0.0
               CALL KSRES2(JPAIR,J1,J2,ZZ,TTIME)
            END IF
         END IF
 40   CONTINUE
!$omp end parallel do
      iPREDALL = .true.

      return

      end
      
